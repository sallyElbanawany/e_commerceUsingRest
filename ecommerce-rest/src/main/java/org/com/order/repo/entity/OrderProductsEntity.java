package org.com.order.repo.entity;
// Generated May 3, 2022, 1:38:42 PM by Hibernate Tools 6.0.0.Beta2


import org.com.product.repo.entity.ProductsEntity;

import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * OrderProducts generated by hbm2java
 */
@Entity
@Table(name="order_products"
    ,catalog="myshop"
)
public class OrderProductsEntity  implements java.io.Serializable {


     private OrderProductsIdEntity id;
     private ProductsEntity products;
     private OrdersEntity orders;
     private int quantity;

    public OrderProductsEntity() {
    }

    public OrderProductsEntity(OrderProductsIdEntity id, ProductsEntity products, OrdersEntity orders, int quantity) {
       this.id = id;
       this.products = products;
       this.orders = orders;
       this.quantity = quantity;
    }
   
     public OrderProductsEntity(OrderProductsEntity ordersEntity) {
        this.id = ordersEntity.getId();
        this.products = ordersEntity.getProducts();
        this.orders = ordersEntity.getOrders();
        this.quantity = ordersEntity.getQuantity();
    }

    @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="orderId", column=@Column(name="order_id", nullable=false) ), 
        @AttributeOverride(name="productId", column=@Column(name="product_id", nullable=false) ) } )
    public OrderProductsIdEntity getId() {
        return this.id;
    }
    
    public void setId(OrderProductsIdEntity id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_id", nullable=false, insertable=false, updatable=false)
    public ProductsEntity getProducts() {
        return this.products;
    }
    
    public void setProducts(ProductsEntity products) {
        this.products = products;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="order_id", nullable=false, insertable=false, updatable=false)
    public OrdersEntity getOrders() {
        return this.orders;
    }
    
    public void setOrders(OrdersEntity orders) {
        this.orders = orders;
    }

    
    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }




}


